---
# List of test cases for validation algorithm verification
#
  # valid path with an indeterminate adjacency in the middle
  # TODO: discuss whether this should be Valid or Unknown
- as_path: [1, 2, 3, 4]
  neighbor_as: 4
  neighbor_type: Provider
  expected_state: Unknown
  # unknown path from a provider
- as_path: [1, 2, 5, 3, 4]
  neighbor_as: 4
  neighbor_type: Provider
  expected_state: Unknown
  # valid prepended path from peer
- as_path: [1, 2, 2]
  neighbor_as: 2
  neighbor_type: Peer
  expected_state: Valid
  # leaked path from customer
- as_path: [1, 3]
  neighbor_as: 3
  neighbor_type: Customer
  expected_state: Invalid
  # valid prepended path from IXP RS
- as_path: [1, 1, 2]
  neighbor_as: 5
  neighbor_type: IxpRouteServer
  expected_state: Valid
  # invalid empty path from IX RS client
  # TODO: discuss whether the algorithm should handle
  #       empty paths specially? Out of scope? Precludes iBGP
- as_path: []
  neighbor_as: 0
  neighbor_type: IxpRouteServerClient
  expected_state: Invalid
  # invalid empty path from IX RS
  # TODO: as above
- as_path: []
  neighbor_as: 0
  neighbor_type: IxpRouteServer
  expected_state: Invalid
  # leak path via IX RS
  # TODO: BUG: A transparent IX RS will have the effect of
  #            treating all paths from an RS peer as if they
  #            were received from a provider
- as_path: [1, 3]
  neighbor_as: 5
  neighbor_type: IxpRouteServer
  expected_state: Invalid
...
